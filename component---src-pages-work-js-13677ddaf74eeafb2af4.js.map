{"version":3,"file":"component---src-pages-work-js-13677ddaf74eeafb2af4.js","mappings":"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","sources":["webpack://daniel/./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","webpack://daniel/./src/component/section.js","webpack://daniel/./src/component/grid-item.js","webpack://daniel/./src/pages/work.js"],"sourcesContent":["import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\n\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\n\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };","import React from \"react\"\nimport { motion } from \"framer-motion\"\nimport { chakra, shouldForwardProp } from \"@chakra-ui/react\"\n\nconst StyledDiv = chakra(motion.div, {\n  shouldForwardProp: prop => {\n    return shouldForwardProp(prop) || prop === 'transition'\n  }\n})\n\nconst Section = ({ children, delay = 0, ...props }) => (\n  <StyledDiv\n    initial={{ y: 10, opacity: 0 }}\n    animate={{ y: 0, opacity: 1 }}\n    transition={{ duration: 0.8, delay }}\n    mb={6}\n    {...props}\n  >\n    {children}\n  </StyledDiv>\n)\n\nexport default Section\n","import React from \"react\"\nimport { Box, LinkBox, LinkOverlay, Text, Image } from \"@chakra-ui/react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Global } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\n\nexport const GridItem = ({ thumbnail, title, children, href, alt }) => {\n\n  const image = getImage(thumbnail)\n  return (\n    <Box w=\"100%\">\n      <LinkBox cursor=\"pointer\">\n        <Image\n          as={GatsbyImage}\n          image={image}\n          alt={alt}\n          className=\"grid-item-thumbnail\"\n        />\n        <LinkOverlay as={Link} to={href} mt={2}><Text>{title}</Text></LinkOverlay>\n        <Text fontSize={14}>\n          {children}\n        </Text>\n\n      </LinkBox>\n      <GridItemStyle />\n    </Box>\n  )\n}\n\nexport const GridItemStyle = () => (\n  <Global\n    styles={`\n      .grid-item-thumbnail {\n        border-radius: 13px;\n      }\n      \n    `}\n  />\n)\n\n","import * as React from \"react\"\nimport { graphql, } from \"gatsby\"\nimport Main from \"../component/layouts/main\"\nimport { Box, /*Container,*/ Heading, SimpleGrid } from \"@chakra-ui/react\"\nimport Section from \"../component/section.js\"\nimport { GridItem } from \"../component/grid-item.js\"\n\nconst Work = ({ data }) => {\n  data.allMdx.nodes.map((node) => console.log(node))\n  return (\n    <Main title=\"Work\">\n      {/* <Container> */}\n      <Heading as=\"h1\">Work</Heading>\n      <SimpleGrid mt=\"30px\" columns={[1, 1, 2, 3]} spacing=\"40px\">\n        {data.allMdx.nodes.map((node) => (\n          <Section key={node.id}>\n            <GridItem thumbnail={node.frontmatter.hero_image} title={node.frontmatter.title} alt={node.frontmatter.hero_image_alt} href={node.slug}>\n              {node.frontmatter.hero_image_description}\n            </GridItem>\n          </Section>\n        ))\n        }\n\n      </SimpleGrid>\n      {/* </Container> */}\n    </Main>\n  )\n}\nexport default Work\n\n\nexport const query = graphql`\n\n  query {\n   allMdx(sort: {order: DESC, fields: frontmatter___hero_priority}) {\n     nodes {\n       id\n        slug\n        frontmatter {\n          title\n          hero_image_alt\n          hero_image{\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n         hero_link_project_deploy\n         hero_link_project_repository\n         hero_tech_stack\n         hero_image_description\n        }\n      }\n    }\n  }\n`\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","width","height","Image$1","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","shared","objectFit","objectPosition","as","className","displayName","StyledDiv","chakra","motion","shouldForwardProp","prop","children","delay","initial","y","opacity","animate","transition","duration","mb","GridItem","thumbnail","title","href","image","getImage","w","cursor","GatsbyImage","Link","to","mt","fontSize","GridItemStyle","styles","data","allMdx","nodes","map","node","console","log","columns","spacing","id","frontmatter","hero_image","hero_image_alt","slug","hero_image_description"],"sourceRoot":""}